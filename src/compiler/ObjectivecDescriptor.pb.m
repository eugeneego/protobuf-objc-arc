// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ObjectivecDescriptor.pb.h"


@implementation ObjectivecDescriptorRoot

static id<PBExtensionField> ObjectivecDescriptorRoot_objectivecFileOptions = nil;
static PBExtensionRegistry *extensionRegistry = nil;

+ (PBExtensionRegistry *)extensionRegistry
{
  return extensionRegistry;
}

+ (void)initialize {
  if (self == [ObjectivecDescriptorRoot class]) {
    ObjectivecDescriptorRoot_objectivecFileOptions = [PBConcreteExtensionField
      extensionWithType:PBExtensionTypeMessage
      extendedClass:[PBFileOptions class]
      fieldNumber:1002
      defaultValue:nil
      messageOrGroupClass:[ObjectiveCFileOptions class]
      isRepeated:NO
      isPacked:NO
      isMessageSetWireFormat:NO];
    PBMutableExtensionRegistry *registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [PBDescriptorRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}

+ (void)registerAllExtensions:(PBMutableExtensionRegistry *)registry
{
  [registry addExtension:ObjectivecDescriptorRoot_objectivecFileOptions];
}

+ (id<PBExtensionField>)objectivecFileOptions
{
  return ObjectivecDescriptorRoot_objectivecFileOptions;
}
@end


@interface ObjectiveCFileOptions ()


@end


@implementation ObjectiveCFileOptions

- (BOOL)hasPackage
{
  return _hasPackage;
}

- (void)setPackage:(NSString *)value
{
  _hasPackage = value != nil;
  _package = value;
}

- (void)clearPackage
{
  _hasPackage = NO;
  _package = nil;
}

- (BOOL)hasClassPrefix
{
  return _hasClassPrefix;
}

- (void)setClassPrefix:(NSString *)value
{
  _hasClassPrefix = value != nil;
  _classPrefix = value;
}

- (void)clearClassPrefix
{
  _hasClassPrefix = NO;
  _classPrefix = nil;
}

- (instancetype)init
{
  if ((self = [super init])) {
    _package = nil;
    _classPrefix = nil;
  }
  return self;
}

- (BOOL)isInitialized
{
  return YES;
}

- (void)writeToCodedOutputStream:(PBCodedOutputStream *)output
{
  if (self.hasPackage) {
    [output writeString:1 value:self.package];
  }
  if (self.hasClassPrefix) {
    [output writeString:2 value:self.classPrefix];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t)serializedSize
{
  int32_t size_ = 0;
  if (self.hasPackage) {
    size_ += computeStringSize(1, self.package);
  }
  if (self.hasClassPrefix) {
    size_ += computeStringSize(2, self.classPrefix);
  }
  size_ += self.unknownFields.serializedSize;
  return size_;
}

+ (ObjectiveCFileOptions *)parseFromData:(NSData *)data
{
  return (ObjectiveCFileOptions *)[[[ObjectiveCFileOptions builder] mergeFromData:data] build];
}

+ (ObjectiveCFileOptions *)parseFromData:(NSData *)data extensionRegistry:(PBExtensionRegistry *)extensionRegistry
{
  return (ObjectiveCFileOptions*)[[[ObjectiveCFileOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}

+ (ObjectiveCFileOptions *)parseFromInputStream:(NSInputStream *)input
{
  return (ObjectiveCFileOptions*)[[[ObjectiveCFileOptions builder] mergeFromInputStream:input] build];
}

+ (ObjectiveCFileOptions *)parseFromInputStream:(NSInputStream *)input extensionRegistry:(PBExtensionRegistry *)extensionRegistry
{
  return (ObjectiveCFileOptions*)[[[ObjectiveCFileOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}

+ (ObjectiveCFileOptions *)parseFromCodedInputStream:(PBCodedInputStream *)input
{
  return [[[ObjectiveCFileOptions builder] mergeFromCodedInputStream:input] build];
}

+ (ObjectiveCFileOptions *)parseFromCodedInputStream:(PBCodedInputStream *)input extensionRegistry:(PBExtensionRegistry *)extensionRegistry
{
  return [[[ObjectiveCFileOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}

+ (ObjectiveCFileOptions_Builder *)builder
{
  return [[ObjectiveCFileOptions_Builder alloc] init];
}

+ (ObjectiveCFileOptions_Builder *)builderWithPrototype:(ObjectiveCFileOptions *)prototype
{
  return [[ObjectiveCFileOptions builder] mergeFrom:prototype];
}

- (ObjectiveCFileOptions_Builder *)builder
{
  return [ObjectiveCFileOptions builder];
}

- (ObjectiveCFileOptions_Builder *)toBuilder
{
  return [ObjectiveCFileOptions builderWithPrototype:self];
}

- (void)writeDescriptionTo:(NSMutableString *)output withIndent:(NSString *)indent
{
  if (self.hasPackage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"package", self.package];
  }
  if (self.hasClassPrefix) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classPrefix", self.classPrefix];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL)isEqual:(id)other
{
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ObjectiveCFileOptions class]]) {
    return NO;
  }
  ObjectiveCFileOptions *otherMessage = other;
  return
    (self.hasPackage == otherMessage.hasPackage && (!self.hasPackage || [self.package isEqual:otherMessage.package])) &&
    (self.hasClassPrefix == otherMessage.hasClassPrefix && (!self.hasClassPrefix || [self.classPrefix isEqual:otherMessage.classPrefix])) &&
    (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}

- (NSUInteger)hash
{
  NSUInteger hashCode = 7;
  if (self.hasPackage) {
    hashCode = hashCode * 31 + [self.package hash];
  }
  if (self.hasClassPrefix) {
    hashCode = hashCode * 31 + [self.classPrefix hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}

@end


@interface ObjectiveCFileOptions_Builder()

@property (strong) ObjectiveCFileOptions *result;

@end


@implementation ObjectiveCFileOptions_Builder

- (instancetype)init
{
  if ((self = [super init])) {
    self.result = [[ObjectiveCFileOptions alloc] init];
  }
  return self;
}

- (PBGeneratedMessage *)internalGetResult
{
  return _result;
}

- (ObjectiveCFileOptions_Builder *)clear
{
  self.result = [[ObjectiveCFileOptions alloc] init];
  return self;
}

- (ObjectiveCFileOptions_Builder *)clone
{
  return [ObjectiveCFileOptions builderWithPrototype:_result];
}

- (ObjectiveCFileOptions *)build
{
  [self checkInitialized];
  return [self buildPartial];
}

- (ObjectiveCFileOptions *)buildPartial
{
  ObjectiveCFileOptions *returnMe = _result;
  self.result = nil;
  return returnMe;
}

- (ObjectiveCFileOptions_Builder *)mergeFrom:(ObjectiveCFileOptions *)other
{
  if (other == nil) {
    return self;
  }
  if (other.hasPackage) {
    [self setPackage:other.package];
  }
  if (other.hasClassPrefix) {
    [self setClassPrefix:other.classPrefix];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (ObjectiveCFileOptions_Builder *)mergeFromCodedInputStream:(PBCodedInputStream *)input
{
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (ObjectiveCFileOptions_Builder *)mergeFromCodedInputStream:(PBCodedInputStream *)input extensionRegistry:(PBExtensionRegistry*)extensionRegistry
{
  PBUnknownFieldSet_Builder *unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPackage:[input readString]];
        break;
      }
      case 18: {
        [self setClassPrefix:[input readString]];
        break;
      }
    }
  }
}

- (BOOL)hasPackage
{
  return _result.hasPackage;
}

- (NSString *)package
{
  return _result.package;
}

- (ObjectiveCFileOptions_Builder*)setPackage:(NSString *)value
{
  _result.package = value;
  return self;
}

- (ObjectiveCFileOptions_Builder*)clearPackage
{
  [_result clearPackage];
  return self;
}

- (BOOL)hasClassPrefix
{
  return _result.hasClassPrefix;
}

- (NSString *)classPrefix
{
  return _result.classPrefix;
}

- (ObjectiveCFileOptions_Builder*)setClassPrefix:(NSString *)value
{
  _result.classPrefix = value;
  return self;
}

- (ObjectiveCFileOptions_Builder*)clearClassPrefix
{
  [_result clearClassPrefix];
  return self;
}

@end


